<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Registration Page</title>
<!-- <link rel="stylesheet" href="Register.css"> -->
<!-- Favicons -->
<link href="assets/img/favicon.png" rel="icon">
<link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i| Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600
,600i,700,700i" rel="stylesheet">

<!-- Vendor CSS Files -->
<link href="assets/vendor/animate.css/animate.min.css" rel="stylesheet">
<link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
<link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
<link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
<link href="assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
<link href="assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

<!-- Template Main CSS File -->
<link href="assets/css/style.css" rel="stylesheet">

</head>
<body>
<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex align-items-center header-inner-page">
<div class="container d-flex align-items-center justify-content-between ">

<div class="logo">
 
<h1><a href="index.html">Alstar</a></h1>
<!-- Uncomment below if you prefer to use an image logo -->
<!-- <a href="index.html"><img src="assets/img/logo.png" alt="" class="img-fluid"></a>--
>
</div>

<nav id="navbar" class="navbar">
<ul>
<li><a class="nav-link scrollto active" href="#hero">Home</a></li>
<li><a class="nav-link scrollto " href="admin.jsp">Admin</a></li>
<li><a class="nav-link scrollto" href="LoginCSP.jsp">CServices</a></li>
<li><a class="nav-link scrollto" href="Loin.html">Login</a></li>
<li><a class="nav-link scrollto " href="Register.html">Register</a></li>

</ul>

<i class="bi bi-list mobile-nav-toggle"></i>
</nav><!-- .navbar -->

</div>
</header><!-- End Header -->

<!-- ======= Hero Section ======= -->
<section id="hero">
<div class="hero-container">
<div id="heroCarousel" data-bs-interval="5000" class="carousel slide carousel-fade" data-bs- ride="carousel">

<ol class="carousel-indicators" id="hero-carousel-indicators"></ol>

<div class="carousel-inner" role="listbox">
<!-- Slide 1 -->
<div class="carousel-item active" style="background-image: url(assets/img/slide/slide- 1.jpg);">
<div class="carousel-container">
<div class="carousel-content">
<h2>Registration Form</h2>
<form action="Register" method="post">
<table style="text-align: left; color: white;">
<tr> <td>UserName:</td><td>
<input type="text" id="username" name="username" required></td></tr>


<tr> <td>Email:</td><td>
<input type="email" id="email" name="email" required></td></tr>
 
<tr><td>Password:</label></td><td>
<input type="password" id="password" name="password" required>
</td></tr>
<tr> <td>Mobile:</td><td>
<input type="number" id="mobile" name="mobile" required>
</td></tr>
<tr> <td>Gender:</td><td>
<input type="text" id="gender" name="gender" required>
</td></tr>
<tr> <td>Address:</td><td>
<input type="text" id="Address" name="address" required>
</td></tr>
<tr> <td>
<button type="submit">Register</button></td></tr>
</table>
</form>
<a	href="Loin.html"	class="btn-get-started	scrollto	animate animated animate fadeInUp">Login</a>
</div>
</div>
</div>

</section>
</body>
</html>


package com.servlet; import java.io.IOException; import java.io.PrintWriter;
import java.sql.SQLException;
import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import com.Database.Database;
import com.bean.User;

/**
* Servlet implementation class Register
*/ @WebServlet("/Register")
public class Register extends HttpServlet {
 
private static final long serialVersionUID = 1L;

/**
* @see HttpServlet#HttpServlet()
*/
public Register() { super();
// TODO Auto-generated constructor stub
}

/**
* @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
*/
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
// TODO Auto-generated method stub
response.getWriter().append("Served at: ").append(request.getContextPath());
}

/**
* @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
*/
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

response.setContentType("text/html"); PrintWriter out = response.getWriter(); System.out.println("rfhhhh");

String username = request.getParameter("username"); String email = request.getParameter("email");
String password = request.getParameter("password"); String mobile=request.getParameter("mobile"); String gender=request.getParameter("gender"); String address=request.getParameter("address");
User user=new User(); user.setName(username); user.setEmail(email); user.setPassword(password); user.setMobile(mobile); user.setGender(gender); user.setAddress(address); System.out.println("jnjkndjjn"); try {
int i=Database.register(user);
 
if(i>0) {
System.out.println("data Saved");
}else {
System.out.println("data not saved");
}
} catch (ClassNotFoundException | SQLException e) {

e.printStackTrace();
}


if (username.isEmpty() || email.isEmpty() || password.isEmpty() || mobile.isEmpty()|| gender.isEmpty() || address.isEmpty()) {
out.println("<p style='color:red;'>Please fill in all fields.</p>");
} else {
// Here you can perform database operations to store the registration data
// For demonstration purposes, just print the submitted data out.println("<p style='color:green;'>Registration successful!</p>"); out.println("<p>Username: " + username + "</p>"); out.println("<p>Email: " + email + "</p>"); out.println("<p>Password: " + password + "</p>");
}

}

}

package com.servlet;
import java.awt.datatransfer.StringSelection; import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream; import java.io.FileOutputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.PrintWriter;
import java.security.MessageDigest; import java.sql.Connection;
import java.sql.PreparedStatement; import java.sql.SQLException; import java.sql.Statement;
import java.util.HashSet;
import java.util.stream.Collectors; import javax.servlet.RequestDispatcher; import javax.servlet.ServletException;
 
import javax.servlet.annotation.MultipartConfig; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import javax.servlet.http.HttpSession;
import javax.servlet.http.Part; import utils.SplitNumber; import com.Database.Database;
import com.algorithms.RandomeString; import com.dao.Test;

/**
* Servlet implementation class Upload
*/
@MultipartConfig(maxFileSize = 16177215) @WebServlet("/Upload")
public class Upload extends HttpServlet { private static final long serialVersionUID = 1L;
/**
* @see HttpServlet#HttpServlet()
*/
public Upload() { super();
// TODO Auto-generated constructor stub
}

/**
* @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
*/
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
// TODO Auto-generated method stub
}

protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
// TODO Auto-generated method stub Part filepart=request.getPart("file");
String fname=request.getParameter("fname");

HttpSession ses=request.getSession(false); String uid=(String)ses.getAttribute("uid"); Part filepart1=request.getPart("file");
 
InputStream inputStream, input,input1, input2,input3; FileOutputStream filePart;
String file=filepart1.getName();
int fileSize = (int) filepart1.getSize(); System.out.println(fileSize);
int PART_SIZE = (int)fileSize/2;
int nChunks = 0, read = 0, readLength = PART_SIZE; String num=RandomeString.getFid();
byte[] byteChunkPart, byteChunkPart1; String key=RandomeString.getSaltString(); try {
Connection con=Database.getConnection(); Statement st=con.createStatement();
input1 = filepart.getInputStream(); input = filepart.getInputStream(); input2 = filepart.getInputStream(); input3 = filepart.getInputStream();
String result1 = new BufferedReader(new InputStreamReader(input))
.lines().collect(Collectors.joining("\n")); System.out.println(result1);
int length=result1.length();

int a[]=SplitNumber.splitIntoParts(length,5); System.out.println(a.length);
for(int i : a) {
System.out.println("values from array"+i);
}
HashSet<String> set=new HashSet<>(); for(int i=0;i<a.length;i++) {
set.add(result1.substring(0,100));
}
for(String s1: set) {
System.out.println("set values"+s1);
}


String s1=result1.substring(101,170); String h1= GFG2.getHash(s1); if(s1!=null) {
int i=  Database.node1(num,uid, s1,h1);
}
else {
System.out.println("data not inserted");
 
}

String s2=result1.substring(171,250); String h2= GFG2.getHash(s2); if(s2!=null) {
int i=  Database.node2(num,uid, s2,h2);
 
}
else {

}
 


System.out.println("data not inserted");
 

String s4=result1.substring(251,320); String h4= GFG2.getHash(s4); if(s4!=null) {
int i=  Database.node3(num,uid, s4,h4);
 
}
else {

}
 


System.out.println("data not inserted");
 

String s5=result1.substring(321,400); String h5= GFG2.getHash(s5); if(s1!=null) {
int i=Database.node4(num,uid, s5,h5);
 
}
else {

}
 


System.out.println("data not inserted");
 

String s6=result1.substring(401); String h6= GFG2.getHash(s6); if(s1!=null) {
int i= Database.node5(num,uid, s6,h6);
 
}
else {
}
 

System.out.println("data not inserted");
 
System.out.println(s1+"first node"); System.out.println(s2+"second node"); System.out.println(s4+"third node"); System.out.println(s5+"Fourth node"); System.out.println(s6+"fifth node"); String s8[]=new String[5]; s8[0]=s1;s8[1]=s2;s8[2]=s4;s8[3]=s5; s8[4]=s6;
String type=filepart.getContentType();
 
System.out.println(num);
String sql ="insert into upload values(?,?,?,?,?,?,?)"; PreparedStatement ps = con.prepareStatement(sql); String hashValue= GFG2.getHash(fname);
filePart = new FileOutputStream(fname); ps.setString(1, num);
ps.setString(2, uid); ps.setString(3, fname); ps.setBinaryStream(4, input1); ps.setString(5, type);
/* ps.setString(6, fdes); */ ps.setString(6, key); ps.setString(7, hashValue); int i = ps.executeUpdate();

/*System.out.println(i+" "+file); inputStream = filepart1.getInputStream();
int ji=0;
while (fileSize > 0) { ji++;
if (fileSize <= 5) {
readLength = fileSize;
}
byteChunkPart = new byte[readLength];
read = inputStream.read(byteChunkPart, 0, readLength); fileSize -= read;
String text = new String(byteChunkPart); String key1 = RandomeString.getSaltString(); String enc = Test.encryption(text, key1); byteChunkPart1 = enc.getBytes();
String tx = new String(byteChunkPart1); System.out.println(tx);
PreparedStatement	ps2=con.prepareStatement("update	upload	set part"+ji+"=?, f"+ji+"key=? where fid=?");
PreparedStatement	ps1=con.prepareStatement("update	upload1	set f"+ji+"key=? where fid=?");
assert (read == byteChunkPart.length); nChunks++;
File nf=new File("temp.txt");
//Use SHA-1 algorithm
//	MessageDigest shaDigest = MessageDigest.getInstance("SHA-256");

//SHA-1 checksum
//String shaChecksum = getFileChecksum(shaDigest, file);
 
filePart.write(byteChunkPart1);
ps2.setBinaryStream(1, new FileInputStream(nf), fileSize); ps2.setString(2, key1);
ps2.setString(3, num); ps1.setString(1, key1); ps1.setString(2, num);
int i2=ps2.executeUpdate(); i2 = ps1.executeUpdate(); filePart.flush(); filePart.close(); byteChunkPart = null; filePart = null; byteChunkPart1 = null;
System.out.println(nChunks+" "+i2)
}
inputStream.close();*/ if(i!=-1){
request.setAttribute("result", s8);
RequestDispatcher	requestDispatcher=request.getRequestDispatcher("upload.jsp");

requestDispatcher.forward(request, response);
//	response.sendRedirect("upload.jsp?Uploaded Data Has Stored Successfully in The Database");
 

}else{


}
 
System.out.println("completed");

response.sendRedirect("upload.jsp?Failed to upload"); System.out.println("error");
 

} catch (IOException | SQLException exception) { exception.printStackTrace();
} catch (ClassNotFoundException e) {
// TODO Auto-generated catch block e.printStackTrace();
}
}

}

<%@page import="com.Database.Database"%>


<%@page import="java.util.Iterator"%>
<%@page import="java.util.List"%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1"%>
 
<!DOCTYPE html>
<html lang="en">

<head>

<!-- Favicons -->
<link href="assets/img/favicon.png" rel="icon">
<link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i| Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600
,600i,700,700i" rel="stylesheet">

<!-- Vendor CSS Files -->
<link href="assets/vendor/animate.css/animate.min.css" rel="stylesheet">
<link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
<link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
<link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
<link href="assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
<link href="assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">


</head>

<body>

<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex align-items-center header-inner-page">
<div class="container d-flex align-items-center justify-content-between ">
<div class="logo">
<h1><a href="index.html">Attacker Details</a></h1>
<!-- Uncomment below if you prefer to use an image logo -->
<!-- <a href="index.html"><img src="assets/img/logo.png" alt="" class="img-fluid"></a>--
>
</div>

<nav id="navbar" class="navbar">
<ul>
<!-- <li><a class="nav-link scrollto active" href="#hero">Home</a></li> -->
<li><a class="nav-link scrollto" href="Attackers.jsp">Attacker Details</a></li>
<li><a class="nav-link scrollto" href="FileDetails.jsp"> Uploaded Data</a></li>

<li><a class="nav-link scrollto " href="admin.jsp">Logout</a></li>
 
</ul>

<i class="bi bi-list mobile-nav-toggle"></i>
</nav><!-- .navbar -->

</div>
</header><!-- End Header -->

<!-- ======= Hero Section ======= -->
<section id="hero">
<div class="hero-container">
<div id="heroCarousel" data-bs-interval="5000" class="carousel slide carousel-fade" data-bs- ride="carousel">

<ol class="carousel-indicators" id="hero-carousel-indicators"></ol>

<div class="carousel-inner" role="listbox">

<!-- Slide 1 -->
<div class="carousel-item active" style="background-image: url(assets/img/slide/slide- 1.jpg); height:690px;">
<div class="carousel-container">
<div class="carousel-content" style="height: 100%;">
<center>


<h2>ATTACKER DETAILS</h2>
</br></br>
<%
String sql = "select * from attack";
List<String> lt = Database.getAttack(sql); Iterator<String> itr = lt.iterator();
%>
<table width="80%" border="1">
<tr>
 





</tr>
<%

%>
 
<th style="color: GREEN;"> File ID</th>
<th style="color: GREEN;">Owner ID</th>
<th style="color: GREEN;">User ID</th>
<th style="color: GREEN;">IP Address</th>
<th style="color: GREEN;">Date of Attacker</th>


while(itr.hasNext()){
 
<tr style="color: white;">
 





</tr>
<%

%>
 
<td><%=itr.next()%></td>
<td><%=itr.next()%></td>
<td><%=itr.next()%></td>
<td><%=itr.next()%></td>
<td><%=itr.next()%></td>


}
 
</table></center>

<style> body{
width: 100%;
height: 100%;


}
.navbar{ display:inline; color:white;}
</style>

</div>
</div>
</div>

</section><!-- End Hero -->
</body>

</html>
